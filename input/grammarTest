import correspondences/eqGeom3

grammar equationM:equationG =
    equality : [v1:expr, =, v2:expr] -> equality[v1:expr, equals, v2:expr],
    expr : [v1:expr, +, v2:expr] -> infixOp[v1:expr, plus, v2:expr]
         | [v1:expr, -, v2:expr] -> infixOp[v1:expr, minus, v2:expr],
    expr : [v1:expr, *, v2:expr] -> infixOp[v1:expr, times, v2:expr]
         | [v1:expr, /, v2:expr] -> infixOp[v1:expr, divide, v2:expr],
    expr : [sin, v1:expr] -> app[sin, v1:expr]
         | [cos, v1:expr] -> app[cos, v1:expr]
         | [tan, v1:expr] -> app[tan, v1:expr],
    expr : [open, v1:expr, close] -> brackets[open, v1:expr, close]
         | [1] -> one
         | [A] -> A
         | [B] -> B
         | [C] -> C
         | [90] -> ninety

comment opoeo:equationM = open A + B close = 1

input opoeo:equationM = open A * B close = 1


comment opoeo:equationG =
     t11:equality <- equality [t8:expr <- brackets[t2:open, t6:test:expr <- infixOp[t3:A, t4:plus, t5:B], t7:close], t9:equals, t10:one]

comment additionDistributes:equationM = A + B = B + A
comment 26:27

comment additionDistributes:equationM = open A + B close + C = A + open C + B close
comment 48:49

input additionDistributes:equationM = open A + B close * C = A * C + B * C
comment 46:47

comment additionDistributes:equationM = open A + B close + C = A + open B + C close
comment 48:49

comment additionDistributes:equationM = open A * B close = open B * A close
comment 36:37

comment additionDistributes:equationM = open A + B close + C = open B + C close + A
comment 48:49

comment additionDistributes:equationM = sin A = cos open 90 - A close
comment 35:36

comment additionDistributes:equationM = sin A * sin A + cos A * cos A = 1
comment 42:43

transfer
    sourceConstruction additionDistributes
    targetTypeSystem geometry
    goal ([t46:t47:equality],[t':value]) :: repeq
    output test2
    limit 100
    postprocess geometryPP
