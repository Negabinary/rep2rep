correspondence plusJoin =
    source t:numExp <- infixOp:[numExp,numExp,binOp,numExp]
                    <-[n:numExp,p:plus,m:numExp]
    target t':arrangement <- join:[arrangement,arrangement,arrangement]
                       <-[a:arrangement,b:arrangement]
    tokenRels ([n:numExp],[a:arrangement]) :: count,
              ([m:numExp],[b:arrangement]) :: count,
              ([],[a:arrangement,b:arrangement]) :: disjoint
    constructRel ([t:numExp],[t':arrangement]) :: count
    strength 1.0

correspondence doubleCounting =
    source t:formula <- infixRel:[formula,numExp,binRel,numExp] <-[n:numExp,e:equal,m:numExp]
    target t':arrangement
    tokenRels ([n:numExp],[t':arrangement]) :: count, ([m:numExp],[t':arrangement]) :: count
    constructRel ([t:formula],[t':arrangement]) :: formulaIsValid
    strength 1.0

correspondence div2symmetry =
    source t:numExp <- frac:[numExp,numExp,div,numExp]
                 <-[t1:numExp,line:div,t2:2]
    target t':arrangement <- rotateX:[arrangement,arrangement]
                        <-[t1':arrangement <- remove:[arrangement,arrangement,arrangement]
                                                <-[t2':arrangement,t':arrangement]]
    tokenRels ([t1:numExp],[t2':arrangement]) :: count
    constructRel ([t:numExp],[t':arrangement]) :: count
    strength 1.0

correspondence parenthesesSuperfluous =
    source t:numExp <- addParentheses:[numExp,oB,numExp,cB] <-[toB:oB,x:numExp,tcB:cB]
    target t':arrangement
    tokenRels ([x:numExp],[t':arrangement])::count
    constructRel ([t:numExp],[t':arrangement])::count
    strength 1.0

correspondence multRectangle =
    source t:numExp <- implicitMult:[numExp,numExp,numExp] <-[t1:numExp,t2:numExp]
    target t':arrangement <- makeRectangle:[arrangement,arrangement] <-[t1':arrangement,t2':arrangement]
    tokenRels ([t1:numExp],[t1':arrangement]) :: count, ([t2:numExp],[t2':arrangement]) :: count, ([],[t1':arrangement,t2':arrangement]) :: canRectangulate
    constructRel ([t:numExp],[t':arrangement]) :: count
    strength 1.0

correspondence oneCirc =
    source t:1
    target t':\crc
    tokenRels
    constructRel ([t:1],[t':\crc]) :: count
    strength 1.0

correspondence twoHorizontal =
    source t:2
    target t':\oo
    tokenRels
    constructRel ([t:2],[t':\oo]) :: count
    strength 1.0

correspondence threeHorizontal =
    source t:3
    target t':\ooo
    tokenRels
    constructRel ([t:3],[t':\ooo]) :: count
    strength 1.0

correspondence fourHorizontal =
    source t:4
    target t':\oooo
    tokenRels
    constructRel ([t:4],[t':\oooo]) :: count
    strength 1.0

correspondence twoVertical =
    source t:2
    target t':\ooV
    tokenRels
    constructRel ([t:3],[t':\ooV]) :: count
    strength 1.0

correspondence threeVertical =
    source t:3
    target t':\oooV
    tokenRels
    constructRel ([t:3],[t':\oooV]) :: count
    strength 1.0

correspondence fourVertical =
    source t:4
    target t':\ooooV
    tokenRels
    constructRel ([t:4],[t':\ooooV]) :: count
    strength 1.0
